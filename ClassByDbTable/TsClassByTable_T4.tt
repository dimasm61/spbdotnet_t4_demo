<#@ template debug="false" hostspecific="false" language="C#" language="C#v3.5" #>
<#@ output extension=".ts" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ include file="ClassByTable_T4_Load.ttInclude" #>

<#
    // database AdventureWorks2012
    // https://docs.microsoft.com/ru-ru/sql/samples/adventureworks-install-configure?view=sql-server-ver15&tabs=ssms
    var connStr = "Server=SRV-4\\EX2012;Database=AdventureWorks2012;User Id=user1;Password=user1;";

    DbMsSqlMetadata.Load(connStr);

    foreach(DataRow tableRow in DbMsSqlMetadata.Tables.Rows)
    {
        var tableName = tableRow["table_name"].ToString();
#>

/** <#= tableRow["table_schema"]#>.<#= tableName#> **/
class <#= tableName#>
{
<#  
    var maxColLen = 0;

    foreach(DataRow columnRow in DbMsSqlMetadata.Columns.Rows)
    {
        var columnName = columnRow["column_name"].ToString();
        if (columnRow["table_name"].ToString() != tableRow["table_name"].ToString())
            continue;
        if(columnName.Length > maxColLen) maxColLen = columnName.Length;
#>
        /** <#=columnRow["column_name"].ToString() #> **/
        <#=FixColumnName(columnName, tableName).PadRight(maxColLen) #> : <#= ConvertDbTypeToTs(columnRow["data_type"].ToString())#>;

<#
    }  
#>
    constructor(
<#  
    var k = "  ";
    foreach(DataRow columnRow in DbMsSqlMetadata.Columns.Rows)
    {
        var columnName = columnRow["column_name"].ToString();
        if (columnRow["table_name"].ToString() != tableRow["table_name"].ToString())
            continue;
#>
            <#= k+ToPrivateName(FixColumnName(columnName, tableName) ).PadRight(maxColLen)#>: <#= ConvertDbTypeToTs(columnRow["data_type"].ToString())#>
<#
        k = ", ";
    }  
#>
    )
    {
<#  
    foreach(DataRow columnRow in DbMsSqlMetadata.Columns.Rows)
    {
        var columnName = columnRow["column_name"].ToString();
        if (columnRow["table_name"].ToString() != tableRow["table_name"].ToString())
            continue;
#>
        this.<#=FixColumnName(columnName, tableName).PadRight(maxColLen)#>  = <#= ToPrivateName(FixColumnName(columnName, tableName) )#>;
<#
    }  
#>
    }
}
<#
    }
#>
